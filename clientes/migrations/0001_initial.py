# Generated by Django 5.2.5 on 2025-09-01 21:55

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Cliente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=200, verbose_name="Nome")),
                (
                    "cpf_cnpj",
                    models.CharField(
                        max_length=18,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="CPF deve estar no formato XXX.XXX.XXX-XX ou CNPJ no formato XX.XXX.XXX/XXXX-XX",
                                regex="^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$|^\\d{2}\\.\\d{3}\\.\\d{3}/\\d{4}-\\d{2}$",
                            )
                        ],
                        verbose_name="CPF/CNPJ",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[("PF", "Pessoa Física"), ("PJ", "Pessoa Jurídica")],
                        default="PF",
                        max_length=2,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="E-mail"
                    ),
                ),
                (
                    "telefone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Telefone deve estar no formato (XX) XXXXX-XXXX",
                                regex="^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$",
                            )
                        ],
                        verbose_name="Telefone",
                    ),
                ),
                ("endereco", models.TextField(blank=True, verbose_name="Endereço")),
                (
                    "cidade",
                    models.CharField(blank=True, max_length=100, verbose_name="Cidade"),
                ),
                (
                    "estado",
                    models.CharField(blank=True, max_length=2, verbose_name="Estado"),
                ),
                (
                    "cep",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="CEP deve estar no formato XXXXX-XXX",
                                regex="^\\d{5}-\\d{3}$",
                            )
                        ],
                        verbose_name="CEP",
                    ),
                ),
                (
                    "observacoes",
                    models.TextField(blank=True, verbose_name="Observações"),
                ),
                (
                    "data_cadastro",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Data de Cadastro",
                    ),
                ),
                ("ativo", models.BooleanField(default=True, verbose_name="Ativo")),
            ],
            options={
                "verbose_name": "Cliente",
                "verbose_name_plural": "Clientes",
                "ordering": ["nome"],
                "indexes": [
                    models.Index(fields=["nome"], name="clientes_cl_nome_b2cdde_idx"),
                    models.Index(
                        fields=["cpf_cnpj"], name="clientes_cl_cpf_cnp_0eeb49_idx"
                    ),
                    models.Index(fields=["ativo"], name="clientes_cl_ativo_332763_idx"),
                ],
            },
        ),
    ]
