# Generated by Django 5.2.5 on 2025-09-01 21:55

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("clientes", "0001_initial"),
        ("processos", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CategoriaFinanceira",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=100, unique=True, verbose_name="Nome"),
                ),
                ("descricao", models.TextField(blank=True, verbose_name="Descrição")),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("receita", "Receita"),
                            ("despesa", "Despesa"),
                            ("ambos", "Ambos"),
                        ],
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "cor",
                    models.CharField(
                        default="#007bff", max_length=7, verbose_name="Cor (Hex)"
                    ),
                ),
                ("ativo", models.BooleanField(default=True, verbose_name="Ativo")),
            ],
            options={
                "verbose_name": "Categoria Financeira",
                "verbose_name_plural": "Categorias Financeiras",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="ContaBancaria",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=100, verbose_name="Nome da Conta"),
                ),
                ("banco", models.CharField(max_length=100, verbose_name="Banco")),
                ("agencia", models.CharField(max_length=20, verbose_name="Agência")),
                ("conta", models.CharField(max_length=20, verbose_name="Conta")),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("corrente", "Conta Corrente"),
                            ("poupanca", "Conta Poupança"),
                            ("investimento", "Conta Investimento"),
                        ],
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "saldo_inicial",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=15,
                        verbose_name="Saldo Inicial",
                    ),
                ),
                ("ativo", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "observacoes",
                    models.TextField(blank=True, verbose_name="Observações"),
                ),
            ],
            options={
                "verbose_name": "Conta Bancária",
                "verbose_name_plural": "Contas Bancárias",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="Orcamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "numero",
                    models.CharField(max_length=50, unique=True, verbose_name="Número"),
                ),
                ("descricao", models.TextField(verbose_name="Descrição dos Serviços")),
                (
                    "valor_total",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Valor Total"
                    ),
                ),
                (
                    "data_criacao",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Data de Criação",
                    ),
                ),
                ("data_validade", models.DateField(verbose_name="Data de Validade")),
                (
                    "data_aprovacao",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Aprovação"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("rascunho", "Rascunho"),
                            ("enviado", "Enviado"),
                            ("aprovado", "Aprovado"),
                            ("rejeitado", "Rejeitado"),
                            ("expirado", "Expirado"),
                        ],
                        default="rascunho",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "observacoes",
                    models.TextField(blank=True, verbose_name="Observações"),
                ),
                ("ativo", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "cliente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orcamentos",
                        to="clientes.cliente",
                        verbose_name="Cliente",
                    ),
                ),
                (
                    "processo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orcamentos",
                        to="processos.processo",
                        verbose_name="Processo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Orçamento",
                "verbose_name_plural": "Orçamentos",
                "ordering": ["-data_criacao"],
            },
        ),
        migrations.CreateModel(
            name="ItemOrcamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(max_length=200, verbose_name="Descrição"),
                ),
                (
                    "quantidade",
                    models.PositiveIntegerField(default=1, verbose_name="Quantidade"),
                ),
                (
                    "valor_unitario",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Valor Unitário"
                    ),
                ),
                (
                    "valor_total",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Valor Total"
                    ),
                ),
                (
                    "orcamento",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="itens",
                        to="financeiro.orcamento",
                        verbose_name="Orçamento",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item de Orçamento",
                "verbose_name_plural": "Itens de Orçamento",
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Financeiro",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(max_length=200, verbose_name="Descrição"),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[("receita", "Receita"), ("despesa", "Despesa")],
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "categoria",
                    models.CharField(max_length=50, verbose_name="Categoria"),
                ),
                (
                    "valor",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Valor",
                    ),
                ),
                (
                    "valor_pago",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=15,
                        verbose_name="Valor Pago",
                    ),
                ),
                (
                    "data_vencimento",
                    models.DateField(verbose_name="Data de Vencimento"),
                ),
                (
                    "data_pagamento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Pagamento"
                    ),
                ),
                (
                    "data_criacao",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Data de Criação",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pendente", "Pendente"),
                            ("pago", "Pago"),
                            ("recebido", "Recebido"),
                            ("vencido", "Vencido"),
                            ("cancelado", "Cancelado"),
                        ],
                        default="pendente",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "forma_pagamento",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("dinheiro", "Dinheiro"),
                            ("cartao_credito", "Cartão de Crédito"),
                            ("cartao_debito", "Cartão de Débito"),
                            ("transferencia", "Transferência"),
                            ("pix", "PIX"),
                            ("boleto", "Boleto"),
                            ("cheque", "Cheque"),
                        ],
                        max_length=20,
                        verbose_name="Forma de Pagamento",
                    ),
                ),
                (
                    "numero_documento",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Número do Documento"
                    ),
                ),
                (
                    "observacoes",
                    models.TextField(blank=True, verbose_name="Observações"),
                ),
                ("ativo", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "parcelado",
                    models.BooleanField(default=False, verbose_name="Parcelado"),
                ),
                (
                    "numero_parcelas",
                    models.PositiveIntegerField(
                        default=1, verbose_name="Número de Parcelas"
                    ),
                ),
                (
                    "parcela_atual",
                    models.PositiveIntegerField(
                        default=1, verbose_name="Parcela Atual"
                    ),
                ),
                (
                    "cliente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="financeiro",
                        to="clientes.cliente",
                        verbose_name="Cliente",
                    ),
                ),
                (
                    "financeiro_pai",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parcelas",
                        to="financeiro.financeiro",
                        verbose_name="Financeiro Principal",
                    ),
                ),
                (
                    "processo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="financeiro",
                        to="processos.processo",
                        verbose_name="Processo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Movimentação Financeira",
                "verbose_name_plural": "Movimentações Financeiras",
                "ordering": ["-data_vencimento"],
                "indexes": [
                    models.Index(
                        fields=["processo"], name="financeiro__process_bd8597_idx"
                    ),
                    models.Index(
                        fields=["cliente"], name="financeiro__cliente_43bd43_idx"
                    ),
                    models.Index(fields=["tipo"], name="financeiro__tipo_152c70_idx"),
                    models.Index(
                        fields=["status"], name="financeiro__status_acea80_idx"
                    ),
                    models.Index(
                        fields=["data_vencimento"],
                        name="financeiro__data_ve_e828e6_idx",
                    ),
                    models.Index(
                        fields=["data_pagamento"], name="financeiro__data_pa_010ee4_idx"
                    ),
                    models.Index(
                        fields=["categoria"], name="financeiro__categor_bb6ad6_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="orcamento",
            index=models.Index(
                fields=["cliente"], name="financeiro__cliente_99bb3e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="orcamento",
            index=models.Index(
                fields=["processo"], name="financeiro__process_cc8b5c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="orcamento",
            index=models.Index(fields=["status"], name="financeiro__status_1853eb_idx"),
        ),
        migrations.AddIndex(
            model_name="orcamento",
            index=models.Index(
                fields=["data_validade"], name="financeiro__data_va_618fc4_idx"
            ),
        ),
    ]
