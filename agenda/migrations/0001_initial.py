# Generated by Django 5.2.5 on 2025-09-01 21:55

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("clientes", "0001_initial"),
        ("processos", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="TipoCompromisso",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=100, unique=True, verbose_name="Nome"),
                ),
                ("descricao", models.TextField(blank=True, verbose_name="Descrição")),
                (
                    "cor",
                    models.CharField(
                        default="#007bff",
                        help_text="Cor em formato hexadecimal (#RRGGBB)",
                        max_length=7,
                        verbose_name="Cor (Hex)",
                    ),
                ),
                (
                    "icone",
                    models.CharField(
                        blank=True,
                        help_text="Nome do ícone (ex: calendar, clock, etc.)",
                        max_length=50,
                        verbose_name="Ícone",
                    ),
                ),
                (
                    "duracao_padrao",
                    models.PositiveIntegerField(
                        default=60, verbose_name="Duração Padrão (minutos)"
                    ),
                ),
                ("ativo", models.BooleanField(default=True, verbose_name="Ativo")),
            ],
            options={
                "verbose_name": "Tipo de Compromisso",
                "verbose_name_plural": "Tipos de Compromissos",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="Agenda",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("titulo", models.CharField(max_length=200, verbose_name="Título")),
                ("descricao", models.TextField(blank=True, verbose_name="Descrição")),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("audiencia", "Audiência"),
                            ("reuniao", "Reunião"),
                            ("prazo", "Prazo"),
                            ("consulta", "Consulta"),
                            ("diligencia", "Diligência"),
                            ("protocolo", "Protocolo"),
                            ("outros", "Outros"),
                        ],
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "data_inicio",
                    models.DateTimeField(verbose_name="Data e Hora de Início"),
                ),
                ("data_fim", models.DateTimeField(verbose_name="Data e Hora de Fim")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("agendado", "Agendado"),
                            ("confirmado", "Confirmado"),
                            ("realizado", "Realizado"),
                            ("cancelado", "Cancelado"),
                            ("reagendado", "Reagendado"),
                        ],
                        default="agendado",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "prioridade",
                    models.CharField(
                        choices=[
                            ("baixa", "Baixa"),
                            ("normal", "Normal"),
                            ("alta", "Alta"),
                            ("urgente", "Urgente"),
                        ],
                        default="normal",
                        max_length=20,
                        verbose_name="Prioridade",
                    ),
                ),
                (
                    "local",
                    models.CharField(blank=True, max_length=300, verbose_name="Local"),
                ),
                ("endereco", models.TextField(blank=True, verbose_name="Endereço")),
                (
                    "responsavel",
                    models.CharField(max_length=200, verbose_name="Responsável"),
                ),
                (
                    "notificar_email",
                    models.BooleanField(
                        default=True, verbose_name="Notificar por E-mail"
                    ),
                ),
                (
                    "notificar_sms",
                    models.BooleanField(
                        default=False, verbose_name="Notificar por SMS"
                    ),
                ),
                (
                    "tempo_notificacao",
                    models.PositiveIntegerField(
                        default=60,
                        help_text="Quantos minutos antes do compromisso enviar a notificação",
                        verbose_name="Tempo de Notificação (minutos)",
                    ),
                ),
                (
                    "observacoes",
                    models.TextField(blank=True, verbose_name="Observações"),
                ),
                ("ativo", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "data_criacao",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Data de Criação",
                    ),
                ),
                (
                    "recorrente",
                    models.BooleanField(default=False, verbose_name="Recorrente"),
                ),
                (
                    "frequencia_recorrencia",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("diaria", "Diária"),
                            ("semanal", "Semanal"),
                            ("mensal", "Mensal"),
                            ("anual", "Anual"),
                        ],
                        max_length=20,
                        verbose_name="Frequência de Recorrência",
                    ),
                ),
                (
                    "data_fim_recorrencia",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data Fim da Recorrência"
                    ),
                ),
                (
                    "cliente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agenda",
                        to="clientes.cliente",
                        verbose_name="Cliente",
                    ),
                ),
                (
                    "processo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agenda",
                        to="processos.processo",
                        verbose_name="Processo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Compromisso",
                "verbose_name_plural": "Compromissos",
                "ordering": ["data_inicio"],
            },
        ),
        migrations.CreateModel(
            name="Notificacao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("email", "E-mail"),
                            ("sms", "SMS"),
                            ("push", "Push Notification"),
                        ],
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "destinatario",
                    models.CharField(max_length=200, verbose_name="Destinatário"),
                ),
                ("assunto", models.CharField(max_length=200, verbose_name="Assunto")),
                ("mensagem", models.TextField(verbose_name="Mensagem")),
                (
                    "data_agendamento",
                    models.DateTimeField(verbose_name="Data de Agendamento"),
                ),
                (
                    "data_envio",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Envio"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pendente", "Pendente"),
                            ("enviada", "Enviada"),
                            ("erro", "Erro"),
                        ],
                        default="pendente",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "erro_detalhes",
                    models.TextField(blank=True, verbose_name="Detalhes do Erro"),
                ),
                (
                    "tentativas",
                    models.PositiveIntegerField(default=0, verbose_name="Tentativas"),
                ),
                (
                    "agenda",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notificacoes",
                        to="agenda.agenda",
                        verbose_name="Compromisso",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notificação",
                "verbose_name_plural": "Notificações",
                "ordering": ["-data_agendamento"],
            },
        ),
        migrations.CreateModel(
            name="Participante",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=200, verbose_name="Nome")),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="E-mail"
                    ),
                ),
                (
                    "telefone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Telefone deve estar no formato (XX) XXXXX-XXXX",
                                regex="^\\(?\\d{2}\\)?[\\s-]?\\d{4,5}[\\s-]?\\d{4}$",
                            )
                        ],
                        verbose_name="Telefone",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("organizador", "Organizador"),
                            ("participante", "Participante"),
                            ("opcional", "Opcional"),
                        ],
                        default="participante",
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pendente", "Pendente"),
                            ("confirmado", "Confirmado"),
                            ("recusado", "Recusado"),
                        ],
                        default="pendente",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "observacoes",
                    models.TextField(blank=True, verbose_name="Observações"),
                ),
                (
                    "agenda",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participantes",
                        to="agenda.agenda",
                        verbose_name="Compromisso",
                    ),
                ),
            ],
            options={
                "verbose_name": "Participante",
                "verbose_name_plural": "Participantes",
                "ordering": ["nome"],
            },
        ),
        migrations.AddIndex(
            model_name="agenda",
            index=models.Index(
                fields=["data_inicio"], name="agenda_agen_data_in_446498_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="agenda",
            index=models.Index(
                fields=["data_fim"], name="agenda_agen_data_fi_73de98_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="agenda",
            index=models.Index(
                fields=["processo"], name="agenda_agen_process_43f0af_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="agenda",
            index=models.Index(
                fields=["cliente"], name="agenda_agen_cliente_ee2e53_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="agenda",
            index=models.Index(fields=["status"], name="agenda_agen_status_38f370_idx"),
        ),
        migrations.AddIndex(
            model_name="agenda",
            index=models.Index(fields=["tipo"], name="agenda_agen_tipo_c39016_idx"),
        ),
        migrations.AddIndex(
            model_name="agenda",
            index=models.Index(
                fields=["responsavel"], name="agenda_agen_respons_0817c2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notificacao",
            index=models.Index(
                fields=["agenda"], name="agenda_noti_agenda__43f9de_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notificacao",
            index=models.Index(
                fields=["data_agendamento"], name="agenda_noti_data_ag_034e21_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notificacao",
            index=models.Index(fields=["status"], name="agenda_noti_status_6213c9_idx"),
        ),
        migrations.AddIndex(
            model_name="notificacao",
            index=models.Index(fields=["tipo"], name="agenda_noti_tipo_cec184_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="participante",
            unique_together={("agenda", "email")},
        ),
    ]
